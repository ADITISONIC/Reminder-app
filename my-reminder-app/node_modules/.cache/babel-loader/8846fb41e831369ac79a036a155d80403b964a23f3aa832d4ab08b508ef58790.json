{"ast":null,"code":"var _jsxFileName = \"/Users/aditi.s/master/my-reminder-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport LoginPage from \"./components/LoginPage\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [events, setEvents] = useState([]);\n  const [newEvent, setNewEvent] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const onLogin = async (username, password) => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log(\"Login successful:\", data);\n\n        // Store the token and username in localStorage\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"username\", username); // Store the username\n\n        setIsLoggedIn(true);\n        alert(\"Login successful!\");\n        fetchEvents(); // Fetch events after login\n      } else {\n        alert(data.message || \"Login failed\");\n      }\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      alert(\"An error occurred while logging in\");\n    }\n  };\n  const fetchEvents = async () => {\n    try {\n      const token = localStorage.getItem(\"token\"); // Get token from storage\n      if (!token) {\n        throw new Error(\"Token not found. Please log in again.\");\n      }\n      const response = await fetch(\"http://localhost:5001/api/events\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}` // Add Bearer token here\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setEvents(data); // Set events in state\n      } else {\n        alert(data.message || \"Failed to fetch events\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching events:\", error);\n      alert(error.message || \"An error occurred while fetching events.\");\n    }\n  };\n  const handleAddEvent = async () => {\n    if (newEvent && newDate && eventDescription) {\n      const event = {\n        eventName: newEvent,\n        date: newDate,\n        description: eventDescription // Send description as well\n      };\n      try {\n        const response = await fetch(\"http://localhost:5001/api/events/add\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-auth-token\": localStorage.getItem(\"token\") // Ensure the token is included\n          },\n          body: JSON.stringify(event)\n        });\n        const data = await response.json();\n        if (response.ok) {\n          // Update the events state with the response from the server\n          setEvents(prevEvents => [...prevEvents, data]);\n          setNewEvent(\"\");\n          setNewDate(\"\");\n          setEventDescription(\"\");\n        } else {\n          alert(data.message || \"Failed to add event\");\n        }\n      } catch (error) {\n        console.error(\"Error while adding event:\", error);\n        alert(\"An error occurred while adding the event.\");\n      }\n    } else {\n      alert(\"Please fill out all fields.\");\n    }\n  };\n  const handleDeleteEvent = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        throw new Error(\"Token not found. Please log in again.\");\n      }\n      const response = await fetch(`http://localhost:5001/api/events/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}` // Use Bearer token here\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setEvents(prevEvents => prevEvents.filter(event => event._id !== id));\n        alert(data.message || \"Event deleted successfully\");\n      } else {\n        alert(data.message || \"Failed to delete event\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting event:\", error);\n      alert(\"An error occurred while deleting the event.\");\n    }\n  };\n  useEffect(() => {\n    if (isLoggedIn) {\n      fetchEvents(); // Fetch events when the user is logged in\n    }\n  }, [isLoggedIn]);\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: onLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reminder Website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events\",\n            children: events.sort((a, b) => new Date(a.date) - new Date(b.date)).map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-header\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"event-date\",\n                  children: new Date(event.date).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: event.eventName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: event.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Uploaded by: \", event.uploadedBy || \"Unknown\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteEvent(event._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 23\n              }, this)]\n            }, event._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-event\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Event Name\",\n              value: newEvent,\n              onChange: e => setNewEvent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newDate,\n              onChange: e => setNewDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Event Description\",\n              value: eventDescription,\n              onChange: e => setEventDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddEvent,\n              children: \"Add Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cihPPYjG6dce4YVgLc5qmOgULzo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","LoginPage","Navbar","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","events","setEvents","newEvent","setNewEvent","newDate","setNewDate","eventDescription","setEventDescription","onLogin","username","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","localStorage","setItem","token","alert","fetchEvents","message","error","getItem","Error","Authorization","handleAddEvent","event","eventName","date","description","prevEvents","handleDeleteEvent","id","filter","_id","fileName","_jsxFileName","lineNumber","columnNumber","children","className","path","element","sort","a","b","Date","map","toLocaleDateString","uploadedBy","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/aditi.s/master/my-reminder-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport LoginPage from \"./components/LoginPage\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [events, setEvents] = useState([]);\n  const [newEvent, setNewEvent] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n\n  const onLogin = async (username, password) => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        console.log(\"Login successful:\", data);\n\n        // Store the token and username in localStorage\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"username\", username); // Store the username\n\n        setIsLoggedIn(true);\n        alert(\"Login successful!\");\n\n        fetchEvents(); // Fetch events after login\n      } else {\n        alert(data.message || \"Login failed\");\n      }\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      alert(\"An error occurred while logging in\");\n    }\n  };\n\nconst fetchEvents = async () => {\n  try {\n    const token = localStorage.getItem(\"token\"); // Get token from storage\n    if (!token) {\n      throw new Error(\"Token not found. Please log in again.\");\n    }\n\n    const response = await fetch(\"http://localhost:5001/api/events\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`, // Add Bearer token here\n      },\n    });\n\n    const data = await response.json();\n    if (response.ok) {\n      setEvents(data); // Set events in state\n    } else {\n      alert(data.message || \"Failed to fetch events\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching events:\", error);\n    alert(error.message || \"An error occurred while fetching events.\");\n  }\n};\n\n  const handleAddEvent = async () => {\n    if (newEvent && newDate && eventDescription) {\n      const event = {\n        eventName: newEvent,\n        date: newDate,\n        description: eventDescription, // Send description as well\n      };\n\n      try {\n        const response = await fetch(\"http://localhost:5001/api/events/add\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-auth-token\": localStorage.getItem(\"token\"), // Ensure the token is included\n          },\n          body: JSON.stringify(event),\n        });\n\n        const data = await response.json();\n        if (response.ok) {\n          // Update the events state with the response from the server\n          setEvents((prevEvents) => [...prevEvents, data]);\n          setNewEvent(\"\");\n          setNewDate(\"\");\n          setEventDescription(\"\");\n        } else {\n          alert(data.message || \"Failed to add event\");\n        }\n      } catch (error) {\n        console.error(\"Error while adding event:\", error);\n        alert(\"An error occurred while adding the event.\");\n      }\n    } else {\n      alert(\"Please fill out all fields.\");\n    }\n  };\n\n  const handleDeleteEvent = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        throw new Error(\"Token not found. Please log in again.\");\n      }\n\n      const response = await fetch(`http://localhost:5001/api/events/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`, // Use Bearer token here\n        },\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setEvents((prevEvents) =>\n          prevEvents.filter((event) => event._id !== id)\n        );\n        alert(data.message || \"Event deleted successfully\");\n      } else {\n        alert(data.message || \"Failed to delete event\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting event:\", error);\n      alert(\"An error occurred while deleting the event.\");\n    }\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      fetchEvents(); // Fetch events when the user is logged in\n    }\n  }, [isLoggedIn]);\n\n  if (!isLoggedIn) {\n    return <LoginPage onLogin={onLogin} />;\n  }\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <h1>Reminder Website</h1>\n        <Navbar />\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <div className=\"events\">\n                {events\n                  .sort((a, b) => new Date(a.date) - new Date(b.date))\n                  .map((event) => (\n                    <div key={event._id} className=\"event-card\">\n                      <div className=\"event-header\">\n                        <span className=\"event-date\">\n                          {new Date(event.date).toLocaleDateString()}\n                        </span>\n                      </div>\n                      <h3>{event.eventName}</h3>\n                      <p>{event.description}</p>\n                      <p>Uploaded by: {event.uploadedBy || \"Unknown\"}</p>\n                      <button onClick={() => handleDeleteEvent(event._id)}>\n                        Delete\n                      </button>\n                    </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/add-event\"\n            element={\n              <div className=\"input-section\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Event Name\"\n                  value={newEvent}\n                  onChange={(e) => setNewEvent(e.target.value)}\n                />\n                <input\n                  type=\"date\"\n                  value={newDate}\n                  onChange={(e) => setNewDate(e.target.value)}\n                />\n                <textarea\n                  placeholder=\"Event Description\"\n                  value={eventDescription}\n                  onChange={(e) => setEventDescription(e.target.value)}\n                />\n                <button onClick={handleAddEvent}>Add Event</button>\n              </div>\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAMsB,OAAO,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC5C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,QAAQ;UAAEC;QAAS,CAAC;MAC7C,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,IAAI,CAAC;;QAEtC;QACAK,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,KAAK,CAAC;QACzCF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEf,QAAQ,CAAC,CAAC,CAAC;;QAE5CV,aAAa,CAAC,IAAI,CAAC;QACnB2B,KAAK,CAAC,mBAAmB,CAAC;QAE1BC,WAAW,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,MAAM;QACLD,KAAK,CAACR,IAAI,CAACU,OAAO,IAAI,cAAc,CAAC;MACvC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CH,KAAK,CAAC,oCAAoC,CAAC;IAC7C;EACF,CAAC;EAEH,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMF,KAAK,GAAGF,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7C,IAAI,CAACL,KAAK,EAAE;QACV,MAAM,IAAIM,KAAK,CAAC,uCAAuC,CAAC;MAC1D;MAEA,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCkB,aAAa,EAAE,UAAUP,KAAK,EAAE,CAAE;QACpC;MACF,CAAC,CAAC;MAEF,MAAMP,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACfnB,SAAS,CAACiB,IAAI,CAAC,CAAC,CAAC;MACnB,CAAC,MAAM;QACLQ,KAAK,CAACR,IAAI,CAACU,OAAO,IAAI,wBAAwB,CAAC;MACjD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CH,KAAK,CAACG,KAAK,CAACD,OAAO,IAAI,0CAA0C,CAAC;IACpE;EACF,CAAC;EAEC,MAAMK,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI/B,QAAQ,IAAIE,OAAO,IAAIE,gBAAgB,EAAE;MAC3C,MAAM4B,KAAK,GAAG;QACZC,SAAS,EAAEjC,QAAQ;QACnBkC,IAAI,EAAEhC,OAAO;QACbiC,WAAW,EAAE/B,gBAAgB,CAAE;MACjC,CAAC;MAED,IAAI;QACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;UACnEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,cAAc,EAAES,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC,CAAE;UACjD,CAAC;UACDf,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACiB,KAAK;QAC5B,CAAC,CAAC;QAEF,MAAMhB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;UACf;UACAnB,SAAS,CAAEqC,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAEpB,IAAI,CAAC,CAAC;UAChDf,WAAW,CAAC,EAAE,CAAC;UACfE,UAAU,CAAC,EAAE,CAAC;UACdE,mBAAmB,CAAC,EAAE,CAAC;QACzB,CAAC,MAAM;UACLmB,KAAK,CAACR,IAAI,CAACU,OAAO,IAAI,qBAAqB,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDH,KAAK,CAAC,2CAA2C,CAAC;MACpD;IACF,CAAC,MAAM;MACLA,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EAED,MAAMa,iBAAiB,GAAG,MAAOC,EAAE,IAAK;IACtC,IAAI;MACF,MAAMf,KAAK,GAAGF,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACL,KAAK,EAAE;QACV,MAAM,IAAIM,KAAK,CAAC,uCAAuC,CAAC;MAC1D;MAEA,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC4B,EAAE,EAAE,EAAE;QACrE3B,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCkB,aAAa,EAAE,UAAUP,KAAK,EAAE,CAAE;QACpC;MACF,CAAC,CAAC;MAEF,MAAMP,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACfnB,SAAS,CAAEqC,UAAU,IACnBA,UAAU,CAACG,MAAM,CAAEP,KAAK,IAAKA,KAAK,CAACQ,GAAG,KAAKF,EAAE,CAC/C,CAAC;QACDd,KAAK,CAACR,IAAI,CAACU,OAAO,IAAI,4BAA4B,CAAC;MACrD,CAAC,MAAM;QACLF,KAAK,CAACR,IAAI,CAACU,OAAO,IAAI,wBAAwB,CAAC;MACjD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CH,KAAK,CAAC,6CAA6C,CAAC;IACtD;EACF,CAAC;EAEDvC,SAAS,CAAC,MAAM;IACd,IAAIW,UAAU,EAAE;MACd6B,WAAW,CAAC,CAAC,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAAC7B,UAAU,CAAC,CAAC;EAEhB,IAAI,CAACA,UAAU,EAAE;IACf,oBAAOH,OAAA,CAACH,SAAS;MAACgB,OAAO,EAAEA;IAAQ;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACxC;EAEA,oBACEnD,OAAA,CAACN,MAAM;IAAA0D,QAAA,eACLpD,OAAA;MAAKqD,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBpD,OAAA;QAAAoD,QAAA,EAAI;MAAgB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBnD,OAAA,CAACF,MAAM;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEVnD,OAAA,CAACJ,MAAM;QAAAwD,QAAA,gBACLpD,OAAA,CAACL,KAAK;UACJ2D,IAAI,EAAC,GAAG;UACRC,OAAO,eACLvD,OAAA;YAAKqD,SAAS,EAAC,QAAQ;YAAAD,QAAA,EACpB/C,MAAM,CACJmD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAAChB,IAAI,CAAC,GAAG,IAAIkB,IAAI,CAACD,CAAC,CAACjB,IAAI,CAAC,CAAC,CACnDmB,GAAG,CAAErB,KAAK,iBACTvC,OAAA;cAAqBqD,SAAS,EAAC,YAAY;cAAAD,QAAA,gBACzCpD,OAAA;gBAAKqD,SAAS,EAAC,cAAc;gBAAAD,QAAA,eAC3BpD,OAAA;kBAAMqD,SAAS,EAAC,YAAY;kBAAAD,QAAA,EACzB,IAAIO,IAAI,CAACpB,KAAK,CAACE,IAAI,CAAC,CAACoB,kBAAkB,CAAC;gBAAC;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,eACNnD,OAAA;gBAAAoD,QAAA,EAAKb,KAAK,CAACC;cAAS;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC1BnD,OAAA;gBAAAoD,QAAA,EAAIb,KAAK,CAACG;cAAW;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1BnD,OAAA;gBAAAoD,QAAA,GAAG,eAAa,EAACb,KAAK,CAACuB,UAAU,IAAI,SAAS;cAAA;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACnDnD,OAAA;gBAAQ+D,OAAO,EAAEA,CAAA,KAAMnB,iBAAiB,CAACL,KAAK,CAACQ,GAAG,CAAE;gBAAAK,QAAA,EAAC;cAErD;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GAXDZ,KAAK,CAACQ,GAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAYd,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFnD,OAAA,CAACL,KAAK;UACJ2D,IAAI,EAAC,YAAY;UACjBC,OAAO,eACLvD,OAAA;YAAKqD,SAAS,EAAC,eAAe;YAAAD,QAAA,gBAC5BpD,OAAA;cACEgE,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,YAAY;cACxBC,KAAK,EAAE3D,QAAS;cAChB4D,QAAQ,EAAGC,CAAC,IAAK5D,WAAW,CAAC4D,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC,eACFnD,OAAA;cACEgE,IAAI,EAAC,MAAM;cACXE,KAAK,EAAEzD,OAAQ;cACf0D,QAAQ,EAAGC,CAAC,IAAK1D,UAAU,CAAC0D,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC,eACFnD,OAAA;cACEiE,WAAW,EAAC,mBAAmB;cAC/BC,KAAK,EAAEvD,gBAAiB;cACxBwD,QAAQ,EAAGC,CAAC,IAAKxD,mBAAmB,CAACwD,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtD,CAAC,eACFnD,OAAA;cAAQ+D,OAAO,EAAEzB,cAAe;cAAAc,QAAA,EAAC;YAAS;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACjD,EAAA,CAzMQD,GAAG;AAAAqE,EAAA,GAAHrE,GAAG;AA2MZ,eAAeA,GAAG;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}