{"ast":null,"code":"var _jsxFileName = \"/Users/aditi.s/master/my-reminder-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport LoginPage from \"./components/LoginPage\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [events, setEvents] = useState([]);\n  const [newEvent, setNewEvent] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n  const [addedBy, setAddedBy] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1); // Current page\n  const itemsPerPage = 15; // Items per page\n\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString();\n  };\n  const onLogin = async (username, password) => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem(\"token\", data.token);\n        setIsLoggedIn(true);\n        fetchEvents();\n      } else {\n        alert(data.message || \"Login failed\");\n      }\n    } catch (error) {\n      alert(\"An error occurred while logging in.\");\n    }\n  };\n  const fetchEvents = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/events\", {\n        method: \"GET\",\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\")\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setEvents(data);\n      } else {\n        alert(data.message || \"Failed to fetch events.\");\n      }\n    } catch (error) {\n      alert(\"An error occurred while fetching events.\");\n    }\n  };\n  const handleAddEvent = async () => {\n    if (newEvent && newDate && addedBy && eventDescription) {\n      const event = {\n        eventName: newEvent,\n        date: newDate,\n        addedBy,\n        description: eventDescription\n      };\n      try {\n        const response = await fetch(\"http://localhost:5001/api/events/add\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-auth-token\": localStorage.getItem(\"token\")\n          },\n          body: JSON.stringify(event)\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setEvents(prevEvents => [...prevEvents, data]);\n          setNewEvent(\"\");\n          setNewDate(\"\");\n          setAddedBy(\"\");\n          setEventDescription(\"\");\n        } else {\n          alert(data.message || \"Failed to add event.\");\n        }\n      } catch (error) {\n        alert(\"An error occurred while adding the event.\");\n      }\n    } else {\n      alert(\"Please fill out all fields.\");\n    }\n  };\n  const handleDeleteEvent = async id => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/events/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\")\n        }\n      });\n      if (response.ok) {\n        setEvents(prevEvents => prevEvents.filter(event => event._id !== id));\n      } else {\n        alert(\"Failed to delete event.\");\n      }\n    } catch (error) {\n      alert(\"An error occurred while deleting the event.\");\n    }\n  };\n  useEffect(() => {\n    if (isLoggedIn) {\n      fetchEvents();\n    }\n  }, [isLoggedIn]);\n  const filteredEvents = events.filter(event => event.eventName.toLowerCase().includes(searchQuery.toLowerCase()) || formatDate(event.date).includes(searchQuery));\n\n  // Pagination logic\n  const indexOfLastEvent = currentPage * itemsPerPage;\n  const indexOfFirstEvent = indexOfLastEvent - itemsPerPage;\n  const currentEvents = filteredEvents.slice(indexOfFirstEvent, indexOfLastEvent);\n  const totalPages = Math.ceil(filteredEvents.length / itemsPerPage);\n  const nextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const previousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: onLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reminder Website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by Event Name or Date\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        className: \"search-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events\",\n            children: [currentEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"event-date\",\n                  children: formatDate(event.date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"event-added-by\",\n                  children: event.addedBy\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: event.eventName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: event.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteEvent(event._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this)]\n            }, event._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pagination\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: previousPage,\n                disabled: currentPage === 1,\n                className: \"page-button\",\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Page \", currentPage, \" of \", totalPages]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: nextPage,\n                disabled: currentPage === totalPages,\n                className: \"page-button\",\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-event\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Event Name\",\n              value: newEvent,\n              onChange: e => setNewEvent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newDate,\n              onChange: e => setNewDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Event Description\",\n              value: eventDescription,\n              onChange: e => setEventDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: addedBy,\n              onChange: e => setAddedBy(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Added By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Me\",\n                children: \"Me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Friend\",\n                children: \"Friend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddEvent,\n              children: \"Add Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HLOmGFBxadXVGrmYdaF3/NGNymk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","LoginPage","Navbar","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","events","setEvents","newEvent","setNewEvent","newDate","setNewDate","addedBy","setAddedBy","eventDescription","setEventDescription","searchQuery","setSearchQuery","currentPage","setCurrentPage","itemsPerPage","formatDate","dateString","date","Date","toLocaleDateString","onLogin","username","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","fetchEvents","alert","message","error","getItem","handleAddEvent","event","eventName","description","prevEvents","handleDeleteEvent","id","filter","_id","filteredEvents","toLowerCase","includes","indexOfLastEvent","indexOfFirstEvent","currentEvents","slice","totalPages","Math","ceil","length","nextPage","previousPage","fileName","_jsxFileName","lineNumber","columnNumber","children","className","type","placeholder","value","onChange","e","target","path","element","map","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/aditi.s/master/my-reminder-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport LoginPage from \"./components/LoginPage\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [events, setEvents] = useState([]);\n  const [newEvent, setNewEvent] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n  const [addedBy, setAddedBy] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1); // Current page\n  const itemsPerPage = 15; // Items per page\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString();\n  };\n\n  const onLogin = async (username, password) => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/auth/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem(\"token\", data.token);\n        setIsLoggedIn(true);\n        fetchEvents();\n      } else {\n        alert(data.message || \"Login failed\");\n      }\n    } catch (error) {\n      alert(\"An error occurred while logging in.\");\n    }\n  };\n\n  const fetchEvents = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/events\", {\n        method: \"GET\",\n        headers: { \"x-auth-token\": localStorage.getItem(\"token\") },\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setEvents(data);\n      } else {\n        alert(data.message || \"Failed to fetch events.\");\n      }\n    } catch (error) {\n      alert(\"An error occurred while fetching events.\");\n    }\n  };\n\n  const handleAddEvent = async () => {\n    if (newEvent && newDate && addedBy && eventDescription) {\n      const event = {\n        eventName: newEvent,\n        date: newDate,\n        addedBy,\n        description: eventDescription,\n      };\n\n      try {\n        const response = await fetch(\"http://localhost:5001/api/events/add\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-auth-token\": localStorage.getItem(\"token\"),\n          },\n          body: JSON.stringify(event),\n        });\n\n        const data = await response.json();\n        if (response.ok) {\n          setEvents((prevEvents) => [...prevEvents, data]);\n          setNewEvent(\"\");\n          setNewDate(\"\");\n          setAddedBy(\"\");\n          setEventDescription(\"\");\n        } else {\n          alert(data.message || \"Failed to add event.\");\n        }\n      } catch (error) {\n        alert(\"An error occurred while adding the event.\");\n      }\n    } else {\n      alert(\"Please fill out all fields.\");\n    }\n  };\n\n  const handleDeleteEvent = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/events/${id}`, {\n        method: \"DELETE\",\n        headers: { \"x-auth-token\": localStorage.getItem(\"token\") },\n      });\n\n      if (response.ok) {\n        setEvents((prevEvents) =>\n          prevEvents.filter((event) => event._id !== id)\n        );\n      } else {\n        alert(\"Failed to delete event.\");\n      }\n    } catch (error) {\n      alert(\"An error occurred while deleting the event.\");\n    }\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      fetchEvents();\n    }\n  }, [isLoggedIn]);\n\n  const filteredEvents = events.filter(\n    (event) =>\n      event.eventName.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      formatDate(event.date).includes(searchQuery)\n  );\n\n  // Pagination logic\n  const indexOfLastEvent = currentPage * itemsPerPage;\n  const indexOfFirstEvent = indexOfLastEvent - itemsPerPage;\n  const currentEvents = filteredEvents.slice(\n    indexOfFirstEvent,\n    indexOfLastEvent\n  );\n\n  const totalPages = Math.ceil(filteredEvents.length / itemsPerPage);\n\n  const nextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const previousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  if (!isLoggedIn) {\n    return <LoginPage onLogin={onLogin} />;\n  }\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <h1>Reminder Website</h1>\n        <Navbar />\n\n        <input\n          type=\"text\"\n          placeholder=\"Search by Event Name or Date\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          className=\"search-bar\"\n        />\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <div className=\"events\">\n                {currentEvents.map((event) => (\n                  <div className=\"event-card\" key={event._id}>\n                    <div className=\"event-header\">\n                      <span className=\"event-date\">\n                        {formatDate(event.date)}\n                      </span>\n                      <span className=\"event-added-by\">{event.addedBy}</span>\n                    </div>\n                    <h3>{event.eventName}</h3>\n                    <p>{event.description}</p>\n                    <button onClick={() => handleDeleteEvent(event._id)}>\n                      Delete\n                    </button>\n                  </div>\n                ))}\n                <div className=\"pagination\">\n                  <button\n                    onClick={previousPage}\n                    disabled={currentPage === 1}\n                    className=\"page-button\"\n                  >\n                    Previous\n                  </button>\n                  <span>\n                    Page {currentPage} of {totalPages}\n                  </span>\n                  <button\n                    onClick={nextPage}\n                    disabled={currentPage === totalPages}\n                    className=\"page-button\"\n                  >\n                    Next\n                  </button>\n                </div>\n              </div>\n            }\n          />\n          <Route\n            path=\"/add-event\"\n            element={\n              <div className=\"input-section\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Event Name\"\n                  value={newEvent}\n                  onChange={(e) => setNewEvent(e.target.value)}\n                />\n                <input\n                  type=\"date\"\n                  value={newDate}\n                  onChange={(e) => setNewDate(e.target.value)}\n                />\n                <textarea\n                  placeholder=\"Event Description\"\n                  value={eventDescription}\n                  onChange={(e) => setEventDescription(e.target.value)}\n                />\n                <select\n                  value={addedBy}\n                  onChange={(e) => setAddedBy(e.target.value)}\n                >\n                  <option value=\"\">Added By</option>\n                  <option value=\"Me\">Me</option>\n                  <option value=\"Friend\">Friend</option>\n                </select>\n                <button onClick={handleAddEvent}>Add Event</button>\n              </div>\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}